apply plugin: 'java'
apply plugin: 'ru.d10xa.allure'
apply plugin: 'base'

defaultTasks 'clean', '1.5.4'
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "ru.d10xa:gradle-allure-plugin:0.5.5"
    }
}



repositories {
    mavenCentral()
    jcenter()
}

configurations {
    agent
}

dependencies {
    compile 'com.slickqa:testng:7.0.0-7'
    compile 'org.seleniumhq.selenium:selenium-java:3.13.0'
    compile 'org.hamcrest:java-hamcrest:2.0.0.0'
    compile 'com.beust:jcommander:1.72'
    compile 'com.thoughtworks.xstream:xstream:1.4.11.1'
    compile 'com.google.code.gson:gson:2.8.5'
    testCompile "ru.yandex.qatools.allure:allure-testng-adaptor:1.5.4"
    compile 'ch.qos.logback:logback-classic:1.1.5'
}

allure {
    aspectjweaver = true
    testNG = true
    junit=false
    clean = true
    allureResultsDir = "$buildDir/allure-results"
    allureReportDir = "$buildDir/allure-report"

}

test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

test {
    useTestNG()
    systemProperty 'allure.results.directory', 'allure-results'
}

task generateAllure(type: Exec) {
    commandLine "allure", "generate allure-results"
}
tasks.withType(Test)*.finalizedBy allureReport


task testGroup(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-group.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}

task testContact(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-contact.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}